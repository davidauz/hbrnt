<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
    http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd"
    version="2.2">

    <persistence-unit name="myPersistenceUnit" transaction-type="RESOURCE_LOCAL">
<!--for Persistencymanager-->
        <provider>org.datanucleus.api.jdo.JDOPersistenceManagerFactory</provider>
        <class>com.davidauz.persManager.ExamplePojo</class>
        <properties>
            <property name="javax.jdo.option.ConnectionURL" value="jdbc:h2:mem:test"/>
            <property name="javax.jdo.option.ConnectionDriverName" value="org.h2.Driver"/>
            <property name="javax.jdo.option.ConnectionUserName" value="sa"/>
            <property name="javax.jdo.option.ConnectionPassword" value=""/>
            <property name="javax.jdo.PersistenceManagerFactoryClass" value="org.datanucleus.api.jdo.JDOPersistenceManagerFactory"/>
            <property name="javax.jdo.option.PersistenceUnitName" value="myPersistenceUnit"/>
            <property name="datanucleus.schema.autoCreateTables" value="true"/>
<!--        <property name="javax.jdo.option.ConnectionFactory2" value="jdbc:h2:~/mydatabase;createDatabaseIfNotExist=true"/>
out of luck here: in-memory databases don't have a file system representation.
-->
        </properties>
    </persistence-unit>
</persistence>
